"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[244],{3196:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"guides/migration/migrate9","title":"Migrate to version 9.0.0","description":"Here are the Important changes made for 9.0.0","source":"@site/../docs/guides/migration/migrate9.md","sourceDirName":"guides/migration","slug":"/guides/migration/migrate9","permalink":"/mongodb-memory-server/docs/guides/migration/migrate9","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/mongodb-memory-server/edit/master/docs/../docs/guides/migration/migrate9.md","tags":[],"version":"current","frontMatter":{"id":"migrate9","title":"Migrate to version 9.0.0"},"sidebar":"guides","previous":{"title":"Migrate to version 10.0.0","permalink":"/mongodb-memory-server/docs/guides/migration/migrate10"},"next":{"title":"Migrate to version 8.0.0","permalink":"/mongodb-memory-server/docs/guides/migration/migrate8"}}');var i=o(4848),s=o(8453);const d={id:"migrate9",title:"Migrate to version 9.0.0"},t=void 0,a={},l=[{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Minimal NodeJS version is now <code>14</code>",id:"minimal-nodejs-version-is-now-14",level:3},{value:"Mongodb Driver Version upgraded to 5.x",id:"mongodb-driver-version-upgraded-to-5x",level:3},{value:"Default binary version is now 6.x",id:"default-binary-version-is-now-6x",level:3},{value:"Removed platform translations",id:"removed-platform-translations",level:3},{value:"Removed architectures",id:"removed-architectures",level:3},{value:"MongoMemoryServer <code>instance.auth</code> option is now ignored",id:"mongomemoryserver-instanceauth-option-is-now-ignored",level:3},{value:"<code>AutomaticAuth</code> changes",id:"automaticauth-changes",level:3},{value:"MongoMemoryServer and MongoReplSet <code>.cleanup(boolean)</code> and <code>.stop(boolean)</code> have been removed",id:"mongomemoryserver-and-mongoreplset-cleanupboolean-and-stopboolean-have-been-removed",level:3},{value:"<code>MD5_CHECK</code> is now enabled by default",id:"md5_check-is-now-enabled-by-default",level:3},{value:"Merged Error types",id:"merged-error-types",level:3},{value:"Removed Storage engine <code>devnull</code> and <code>mmapv1</code>",id:"removed-storage-engine-devnull-and-mmapv1",level:3},{value:"Linux fallback binary has been removed",id:"linux-fallback-binary-has-been-removed",level:3},{value:"Ubuntu fallback year has been updated",id:"ubuntu-fallback-year-has-been-updated",level:3},{value:"Non-Breaking changes / Additions",id:"non-breaking-changes--additions",level:2},{value:"Compiler target is now <code>es2019</code>",id:"compiler-target-is-now-es2019",level:3},{value:"Crypto function have been changed to use nodejs internals",id:"crypto-function-have-been-changed-to-use-nodejs-internals",level:2},{value:"Binary childprocess is now also <code>.unref()</code>",id:"binary-childprocess-is-now-also-unref",level:2},{value:"The port testing package has been replaced",id:"the-port-testing-package-has-been-replaced",level:2},{value:"Mongodb version 7.0.0 is now supported",id:"mongodb-version-700-is-now-supported",level:2}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Here are the Important changes made for 9.0.0"}),"\n",(0,i.jsx)(n.admonition,{title:"Important, Read this first",type:"warning",children:(0,i.jsxs)(n.p,{children:["This Guide is written for migration from version ",(0,i.jsx)(n.code,{children:"8.16.0"})," to ",(0,i.jsx)(n.code,{children:"9.0.0"}),", for versions ",(0,i.jsx)(n.code,{children:">9.0.0 <10.0.0"}),", please consult the ",(0,i.jsx)(n.a,{href:"https://github.com/typegoose/mongodb-memory-server/blob/master/CHANGELOG.md",children:"CHANGELOG"})]})}),"\n",(0,i.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,i.jsxs)(n.h3,{id:"minimal-nodejs-version-is-now-14",children:["Minimal NodeJS version is now ",(0,i.jsx)(n.code,{children:"14"})]}),"\n",(0,i.jsxs)(n.p,{children:["With 9.0.0 the minimal nodejs required is ",(0,i.jsx)(n.code,{children:"14.20.1"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"mongodb-driver-version-upgraded-to-5x",children:"Mongodb Driver Version upgraded to 5.x"}),"\n",(0,i.jsxs)(n.p,{children:["The used MongoDB Driver version is now ",(0,i.jsx)(n.code,{children:"5.9.0"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"default-binary-version-is-now-6x",children:"Default binary version is now 6.x"}),"\n",(0,i.jsxs)(n.p,{children:["The default binary version has been upgraded from ",(0,i.jsx)(n.code,{children:"5.0.x"})," to ",(0,i.jsx)(n.code,{children:"6.0.x"}),". For more specifics see ",(0,i.jsx)(n.a,{href:"/mongodb-memory-server/docs/guides/mongodb-server-versions",children:"mongodb-server-versions"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"removed-platform-translations",children:"Removed platform translations"}),"\n",(0,i.jsx)(n.p,{children:"Some platform translations have been removed, because they are either not needed anymore or werent properly supported in the first place:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sunos"})," -> ",(0,i.jsx)(n.code,{children:"linux"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"elementary OS"})," -> ",(0,i.jsx)(n.code,{children:"linux"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removed-architectures",children:"Removed architectures"}),"\n",(0,i.jsx)(n.p,{children:"Some architectures were removed because they were not being build by mongodb anymore and support in mongodb-memory-server has been largely untested:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ia32"})," -> ",(0,i.jsx)(n.code,{children:"i686"})," / ",(0,i.jsx)(n.code,{children:"i386"})]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"mongomemoryserver-instanceauth-option-is-now-ignored",children:["MongoMemoryServer ",(0,i.jsx)(n.code,{children:"instance.auth"})," option is now ignored"]}),"\n",(0,i.jsxs)(n.p,{children:["With 9.0.0 the option ",(0,i.jsx)(n.code,{children:"instance.auth"})," option is going to be ignored, because its set via the (top-level) ",(0,i.jsx)(n.code,{children:"auth"})," option directly."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"new MongoMemoryServer({ instance: { auth: true } })"})," is going to be ignored, use ",(0,i.jsx)(n.code,{children:"new MongoMemoryServer({ auth: { enable: true } })"})]}),"\n",(0,i.jsxs)(n.h3,{id:"automaticauth-changes",children:[(0,i.jsx)(n.code,{children:"AutomaticAuth"})," changes"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AutomaticAuth"})," has been changed to ",(0,i.jsx)(n.strong,{children:"not"})," be enabled anymore by just having a empty object. Also property ",(0,i.jsx)(n.code,{children:"disable"})," has been removed and ",(0,i.jsx)(n.code,{children:"enable"})," has been added."]}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"auth: {}"})," with ",(0,i.jsx)(n.code,{children:"auth: { enable: true }"}),".",(0,i.jsx)(n.br,{}),"\n","Replace ",(0,i.jsx)(n.code,{children:"auth: { disable: true }"})," with ",(0,i.jsx)(n.code,{children:"auth: { enable: false }"}),".",(0,i.jsx)(n.br,{}),"\n","Replace ",(0,i.jsx)(n.code,{children:"auth: { disable: false }"})," with ",(0,i.jsx)(n.code,{children:"auth: { enable: true }"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"mongomemoryserver-and-mongoreplset-cleanupboolean-and-stopboolean-have-been-removed",children:["MongoMemoryServer and MongoReplSet ",(0,i.jsx)(n.code,{children:".cleanup(boolean)"})," and ",(0,i.jsx)(n.code,{children:".stop(boolean)"})," have been removed"]}),"\n",(0,i.jsxs)(n.p,{children:["Previously ",(0,i.jsx)(n.code,{children:"boolean"})," was the only option for the ",(0,i.jsx)(n.code,{children:".cleanup"})," and ",(0,i.jsx)(n.code,{children:".stop"})," function, but they behaved differently between those 2 function and were replaced with ",(0,i.jsx)(n.code,{children:"Cleanup"})," object-options and now have been completely removed."]}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:".stop(true)"})," with ",(0,i.jsx)(n.code,{children:".stop({ doCleanup: true })"}),".",(0,i.jsx)(n.br,{}),"\n","Replace ",(0,i.jsx)(n.code,{children:".cleanup(true)"})," with ",(0,i.jsx)(n.code,{children:".stop({ doCleanup: true, force: true })"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Default is still for both ",(0,i.jsx)(n.code,{children:"{ doCleanup: true, force: false }"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"md5_check-is-now-enabled-by-default",children:[(0,i.jsx)(n.code,{children:"MD5_CHECK"})," is now enabled by default"]}),"\n",(0,i.jsxs)(n.p,{children:["The config option ",(0,i.jsx)(n.a,{href:"/mongodb-memory-server/docs/api/config-options#md5_check",children:(0,i.jsx)(n.code,{children:"MD5_CHECK"})})," has been enabled by default now, resulting in always comparing the downloaded archive with a md5 after a download."]}),"\n",(0,i.jsx)(n.h3,{id:"merged-error-types",children:"Merged Error types"}),"\n",(0,i.jsx)(n.p,{children:"Some error classes have been merged:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EnsureInstanceError"})," & ",(0,i.jsx)(n.code,{children:"InstanceInfoError"})," -> ",(0,i.jsx)(n.code,{children:"InstanceInfoError"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NoSystemBinaryFoundError"})," & ",(0,i.jsx)(n.code,{children:"BinaryNotFoundError"})," -> ",(0,i.jsx)(n.code,{children:"BinaryNotFoundError"})]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"removed-storage-engine-devnull-and-mmapv1",children:["Removed Storage engine ",(0,i.jsx)(n.code,{children:"devnull"})," and ",(0,i.jsx)(n.code,{children:"mmapv1"})]}),"\n",(0,i.jsxs)(n.p,{children:["Storage Engines ",(0,i.jsx)(n.code,{children:"devnull"})," and ",(0,i.jsx)(n.code,{children:"mmapv1"})," have been removed because they are not supported in newer versions of mongodb anymore, ",(0,i.jsx)(n.code,{children:"wiredTiger"})," should be used instead."]}),"\n",(0,i.jsx)(n.h3,{id:"linux-fallback-binary-has-been-removed",children:"Linux fallback binary has been removed"}),"\n",(0,i.jsx)(n.p,{children:"Previously there was a code-path for a fallback linux binary, but this has been removed because mongodb has stopped shipping generic linux binaries since versions after 4.0."}),"\n",(0,i.jsxs)(n.p,{children:["If a fallback is still required, try to use the ubuntu binary via ",(0,i.jsxs)(n.a,{href:"/mongodb-memory-server/docs/api/config-options#distro",children:["Config Options ",(0,i.jsx)(n.code,{children:"DISTRO"})]}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"ubuntu-fallback-year-has-been-updated",children:"Ubuntu fallback year has been updated"}),"\n",(0,i.jsxs)(n.p,{children:["The ubuntu fallback year has been updated to ",(0,i.jsx)(n.code,{children:"22"}),", instead of the previous ",(0,i.jsx)(n.code,{children:"14"}),", because newer versions of mongodb dont ship for any EOL ubuntu version anymore."]}),"\n",(0,i.jsxs)(n.p,{children:["This fallback is only used if the ubuntu year could not be parsed from the os-file.",(0,i.jsx)(n.br,{}),"\n","This can also be overwritten with ",(0,i.jsxs)(n.a,{href:"/mongodb-memory-server/docs/api/config-options#distro",children:["Config Option ",(0,i.jsx)(n.code,{children:"DISTRO"})]}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"non-breaking-changes--additions",children:"Non-Breaking changes / Additions"}),"\n",(0,i.jsxs)(n.h3,{id:"compiler-target-is-now-es2019",children:["Compiler target is now ",(0,i.jsx)(n.code,{children:"es2019"})]}),"\n",(0,i.jsxs)(n.p,{children:["The tsconfig ",(0,i.jsx)(n.code,{children:"target"})," option has been updated to ",(0,i.jsx)(n.code,{children:"es2019"}),", which will result in less polyfills.\nThis should be a non-breaking change"]}),"\n",(0,i.jsx)(n.h2,{id:"crypto-function-have-been-changed-to-use-nodejs-internals",children:"Crypto function have been changed to use nodejs internals"}),"\n",(0,i.jsxs)(n.p,{children:["Crypto functions like for the md5 check and uuidv4 generation have been moved to use the ",(0,i.jsx)(n.code,{children:"node:crypto"})," support, resulting in dropping 2 dependencies."]}),"\n",(0,i.jsxs)(n.p,{children:["Dropped dependencies are ",(0,i.jsx)(n.code,{children:"md5-file"})," and ",(0,i.jsx)(n.code,{children:"uuid"}),"."]}),"\n",(0,i.jsxs)(n.h2,{id:"binary-childprocess-is-now-also-unref",children:["Binary childprocess is now also ",(0,i.jsx)(n.code,{children:".unref()"})]}),"\n",(0,i.jsxs)(n.p,{children:["The Mongodb Binary childprocess is now also ",(0,i.jsx)(n.code,{children:".unref()"}),", like the killer process has been for some time."]}),"\n",(0,i.jsxs)(n.p,{children:["This ",(0,i.jsx)(n.em,{children:"should"})," help with non-closed instances not exiting the nodejs process."]}),"\n",(0,i.jsx)(n.h2,{id:"the-port-testing-package-has-been-replaced",children:"The port testing package has been replaced"}),"\n",(0,i.jsxs)(n.p,{children:["Previously MMS used ",(0,i.jsx)(n.code,{children:"get-port"}),", but it caused some big memory-leakage across big projects, so it has been replaced with one that uses less maps."]}),"\n",(0,i.jsx)(n.p,{children:"It also has been replaced because newer versions were ESM only, but we couldnt switch to ESM yet (and using ESM in CommonJS is not a great experience)"}),"\n",(0,i.jsx)(n.h2,{id:"mongodb-version-700-is-now-supported",children:"Mongodb version 7.0.0 is now supported"}),"\n",(0,i.jsxs)(n.p,{children:["Mongob version ",(0,i.jsx)(n.code,{children:"7.0.0"})," removed storage engine ",(0,i.jsx)(n.code,{children:"ephemeralForTest"}),", with mongodb-memory-server 9.0.0 storage engine ",(0,i.jsx)(n.code,{children:"wiredTiger"})," is the default for binary versions ",(0,i.jsx)(n.code,{children:"7.0.0"})," and higher.\nOlder versions (before ",(0,i.jsx)(n.code,{children:"7.0.0"}),") will still continue to use ",(0,i.jsx)(n.code,{children:"ephemeralForTest"})," by default."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The version used for the decision is the version provided via the resolved ",(0,i.jsx)(n.a,{href:"/mongodb-memory-server/docs/api/config-options#version",children:(0,i.jsx)(n.code,{children:"VERSION"})})," config option.",(0,i.jsx)(n.br,{}),"\n","This mean it needs to match the version the system binary is (a warning is printed if they are not the same)."]}),(0,i.jsx)(n.p,{children:"If the option is unset, the default version will be used, which is likely not correct for the system binary."}),(0,i.jsx)(n.p,{children:"If the decision should not be automatic, the storage engine can be explicitly defined as a instance option."})]}),"\n",(0,i.jsxs)(n.p,{children:["It is recommended to run those instances with a db path which is equivalent to ",(0,i.jsx)(n.a,{href:"https://wiki.archlinux.org/title/tmpfs",children:(0,i.jsx)(n.code,{children:"tmpfs"})}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>t});var r=o(6540);const i={},s=r.createContext(i);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);