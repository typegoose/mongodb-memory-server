"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[153],{7482:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/quick-start-guide","title":"Quick Start Guide","description":"This Guide will show how to setup this package for basic use","source":"@site/../docs/guides/quick-start-guide.md","sourceDirName":"guides","slug":"/guides/quick-start-guide","permalink":"/mongodb-memory-server/docs/guides/quick-start-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/mongodb-memory-server/edit/master/docs/../docs/guides/quick-start-guide.md","tags":[],"version":"current","frontMatter":{"id":"quick-start-guide","title":"Quick Start Guide"},"sidebar":"guides","next":{"title":"Frequently Asked Questions","permalink":"/mongodb-memory-server/docs/guides/faq"}}');var r=s(4848),t=s(8453);const o={id:"quick-start-guide",title:"Quick Start Guide"},l=void 0,a={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Choose the right package",id:"choose-the-right-package",level:2},{value:"Normal Server",id:"normal-server",level:2},{value:"ReplicaSet",id:"replicaset",level:2},{value:"Final Notes",id:"final-notes",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This Guide will show how to setup this package for basic use"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["The Examples on this page assume Top-Level async-await for readability.",(0,r.jsx)(n.br,{}),"\n","If Top-Level async-await is not available for your case, the code can in most cases be wrapped like:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"(async () => {\n  // async code in where\n})();\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NodeJS: 16.20.1+"}),"\n",(0,r.jsx)(n.li,{children:"Typescript: 5.3+ (if used)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When on Linux, one of the following are required:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["having ",(0,r.jsx)(n.code,{children:"lsb-core"})," installed (or any that provides the ",(0,r.jsx)(n.code,{children:"lsb_release"})," command)"]}),"\n",(0,r.jsxs)(n.li,{children:["having an ",(0,r.jsx)(n.code,{children:"/etc/os-release"})," file that is compliant to the ",(0,r.jsx)(n.a,{href:"https://www.freedesktop.org/software/systemd/man/os-release.html",children:"OS-Release Spec"})]}),"\n",(0,r.jsxs)(n.li,{children:["having an ",(0,r.jsx)(n.code,{children:"/etc/*-release"})," file that is compliant to the ",(0,r.jsx)(n.a,{href:"https://www.freedesktop.org/software/systemd/man/os-release.html",children:"OS-Release Spec"})," (and does not include ",(0,r.jsx)(n.code,{children:"lsb"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"manually specify which version & system should be used"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["On Linux, you will also need ",(0,r.jsx)(n.code,{children:"libcurl"})," (or ",(0,r.jsx)(n.code,{children:"libcurl3"}),' on some older distro versions). This will probably only be an issue on "slim" Docker images.']}),"\n",(0,r.jsx)(n.h2,{id:"choose-the-right-package",children:"Choose the right package"}),"\n",(0,r.jsx)(n.p,{children:"There are multiple packages for this project, here are the differences:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mongodb-memory-server-core"})," is the main package, which does not have any hooks on install"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mongodb-memory-server"})," adds hooks to install on ",(0,r.jsx)(n.code,{children:"yarn install"})," or ",(0,r.jsx)(n.code,{children:"npm install"})," to install the ",(0,r.jsx)(n.em,{children:"latest package locally"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mongodb-memory-server-global"})," adds hooks to install on ",(0,r.jsx)(n.code,{children:"yarn install"})," or ",(0,r.jsx)(n.code,{children:"npm install"})," to install the ",(0,r.jsx)(n.em,{children:"latest package globally"})," (into $HOME)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mongodb-memory-server-global-X.X"})," adds hooks to install on ",(0,r.jsx)(n.code,{children:"yarn install"})," or ",(0,r.jsx)(n.code,{children:"npm install"})," to install ",(0,r.jsxs)(n.em,{children:["MongoDB with version ",(0,r.jsx)(n.code,{children:"X.X"})," globally"]})," (into $HOME)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"normal-server",children:"Normal Server"}),"\n",(0,r.jsx)(n.p,{children:"A Normal Server can be easily started with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { MongoMemoryServer } from 'mongodb-memory-server';\n\n// This will create an new instance of \"MongoMemoryServer\" and automatically start it\nconst mongod = await MongoMemoryServer.create();\n\nconst uri = mongod.getUri();\n\n// The Server can be stopped again with\nawait mongod.stop();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"replicaset",children:"ReplicaSet"}),"\n",(0,r.jsx)(n.p,{children:"A ReplicaSet can be easily started with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { MongoMemoryReplSet } from \'mongodb-memory-server\';\n\n// This will create an new instance of "MongoMemoryReplSet" and automatically start all Servers\nconst replset = await MongoMemoryReplSet.create({ replSet: { count: 4 } }); // This will create an ReplSet with 4 members\n// To use Transactions, the "storageEngine" needs to be changed to `wiredTiger`\nconst replset = await MongoMemoryReplSet.create({ replSet: { count: 4, storageEngine: \'wiredTiger\' } }); // This will create an ReplSet with 4 members and storage-engine "wiredTiger"\n\nconst uri = replset.getUri();\n\n// The ReplSet can be stopped again with\nawait replset.stop();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"final-notes",children:"Final Notes"}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsx)(n.p,{children:"When you are not using a global instance for tests and run multi-threaded tests, it can cause Race Conditions."})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);