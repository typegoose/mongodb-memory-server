"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[358],{5680:function(e,n,t){t.d(n,{xA:function(){return m},yg:function(){return g}});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=l(t),u=o,g=c["".concat(s,".").concat(u)]||c[u]||y[u]||a;return t?r.createElement(g,i(i({ref:n},m),{},{components:t})):r.createElement(g,i({ref:n},m))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[c]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},19:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var r=t(8168),o=t(8587),a=(t(6540),t(5680)),i=["components"],p={id:"mongo-memory-replset-opts",title:"MongoMemoryReplSetOpts"},s=void 0,l={unversionedId:"api/interfaces/mongo-memory-replset-opts",id:"api/interfaces/mongo-memory-replset-opts",title:"MongoMemoryReplSetOpts",description:"API Documentation of MongoMemoryReplSetOpts-Interface",source:"@site/../docs/api/interfaces/mongo-memory-replset-opts.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/mongo-memory-replset-opts",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-replset-opts",draft:!1,editUrl:"https://github.com/typegoose/mongodb-memory-server/edit/master/docs/../docs/api/interfaces/mongo-memory-replset-opts.md",tags:[],version:"current",frontMatter:{id:"mongo-memory-replset-opts",title:"MongoMemoryReplSetOpts"},sidebar:"api",previous:{title:"MongoBinaryOpts",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-binary-opts"},next:{title:"DisposeOptions",permalink:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-dispose-opts"}},m={},c=[{value:"Values",id:"values",level:2},{value:"instanceOpts",id:"instanceopts",level:3},{value:"binary",id:"binary",level:3},{value:"replSet",id:"replset",level:3}],y={toc:c},u="wrapper";function g(e){var n=e.components,t=(0,o.A)(e,i);return(0,a.yg)(u,(0,r.A)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"API Documentation of ",(0,a.yg)("inlineCode",{parentName:"p"},"MongoMemoryReplSetOpts"),"-Interface"),(0,a.yg)("h2",{id:"values"},"Values"),(0,a.yg)("h3",{id:"instanceopts"},"instanceOpts"),(0,a.yg)("p",null,"Typings: ",(0,a.yg)("inlineCode",{parentName:"p"},"instanceOpts: MongoMemoryInstanceOptsBase[]"),(0,a.yg)("br",{parentName:"p"}),"\n","Default: ",(0,a.yg)("inlineCode",{parentName:"p"},"{}")),(0,a.yg)("p",null,"Set ",(0,a.yg)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-instance-opts#values-for-mongomemoryinstanceoptsbase"},(0,a.yg)("inlineCode",{parentName:"a"},"MongoMemoryInstanceOptsBase"))," for a instance individually, overwrites existing options from ",(0,a.yg)("a",{parentName:"p",href:"#replset"},(0,a.yg)("inlineCode",{parentName:"a"},"replSet")),"."),(0,a.yg)("p",null,"The count of this array deducts from the ",(0,a.yg)("inlineCode",{parentName:"p"},"replSet.count"),", if more than ",(0,a.yg)("inlineCode",{parentName:"p"},"replSet.count")," are specified, the additional ones are also spawned."),(0,a.yg)("h3",{id:"binary"},"binary"),(0,a.yg)("p",null,"Typings: ",(0,a.yg)("inlineCode",{parentName:"p"},"binary: MongoBinaryOpts"),(0,a.yg)("br",{parentName:"p"}),"\n","Default: ",(0,a.yg)("inlineCode",{parentName:"p"},"{}")),(0,a.yg)("p",null,"Set ",(0,a.yg)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/interfaces/mongo-memory-binary-opts"},(0,a.yg)("inlineCode",{parentName:"a"},"MongoBinaryOpts"))," for the replset instances to use."),(0,a.yg)("h3",{id:"replset"},"replSet"),(0,a.yg)("p",null,"Typings: ",(0,a.yg)("inlineCode",{parentName:"p"},"replSet: ReplSetOpts"),(0,a.yg)("br",{parentName:"p"}),"\n","Default: ",(0,a.yg)("inlineCode",{parentName:"p"},"{}")),(0,a.yg)("p",null,"Set ",(0,a.yg)("a",{parentName:"p",href:"/mongodb-memory-server/versions/beta/docs/api/interfaces/replset-opts"},(0,a.yg)("inlineCode",{parentName:"a"},"ReplSetOpts"))," for the whole ReplSet and default options for the instances to spawn with."))}g.isMDXComponent=!0}}]);